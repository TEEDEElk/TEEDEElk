{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Project Documentation","text":"<p>Welcome! This site provides comprehensive documentation for the project's public APIs, functions, and components.</p> <ul> <li>Quick links:</li> <li>Getting Started: getting-started.md</li> <li>Usage Guide: usage.md</li> <li>API Reference: api/README.md</li> <li>Components: components.md</li> <li>Examples: examples.md</li> </ul> <p>If you were expecting a specific API/SDK reference, see the API Reference section. If the codebase is empty or not yet indexed here, you will find guidance on how to generate API docs automatically for your language of choice.</p>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#unreleased","title":"[Unreleased]","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>Initial documentation scaffold with MkDocs</li> </ul>"},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li>N/A</li> </ul>"},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>N/A</li> </ul>"},{"location":"components/","title":"Components","text":"<p>Document services, modules, and UI components here. For each component include: - Name - Purpose - Public props/inputs - Events/outputs - Dependencies - Examples</p>"},{"location":"components/#example-ui-component","title":"Example (UI Component)","text":"<p>Component: <code>Button</code> - Props:   - <code>label: string</code> \u2014 Button text   - <code>onClick: () =&gt; void</code> \u2014 Click handler - Example (React):   ```tsx   import { Button } from \"./components/Button\";</p> <p>export default function Example() {     return  alert(\"Saved\")} /&gt;;   }   ```"},{"location":"components/#example-service-component","title":"Example (Service Component)","text":"<p>Service: <code>EmailSender</code> - Methods: <code>send(to, subject, body)</code> - Example:   <code>ts   const sender = new EmailSender({ provider: \"ses\" });   await sender.send(\"a@b.com\", \"Hello\", \"World\");</code></p>"},{"location":"contributing/","title":"Contributing","text":"<p>Thank you for considering a contribution!</p>"},{"location":"contributing/#development-workflow","title":"Development workflow","text":"<ul> <li>Fork and create a feature branch.</li> <li>Write clear, well-documented code and tests.</li> <li>Update documentation for any user-facing changes.</li> </ul>"},{"location":"contributing/#coding-standards","title":"Coding standards","text":"<ul> <li>Prefer descriptive names and explicit types where applicable.</li> <li>Keep functions small and focused.</li> <li>Add docstrings/JSDoc for all public APIs.</li> </ul>"},{"location":"contributing/#commit-messages","title":"Commit messages","text":"<ul> <li>Use conventional commits where possible (e.g., <code>feat:</code>, <code>fix:</code>, <code>docs:</code>).</li> </ul>"},{"location":"contributing/#pull-requests","title":"Pull requests","text":"<ul> <li>Include tests and documentation updates.</li> <li>Link related issues.</li> </ul>"},{"location":"examples/","title":"Examples","text":""},{"location":"examples/#example-basic-data-flow","title":"Example: Basic data flow","text":"<pre><code>User Action -&gt; API Endpoint -&gt; Service -&gt; Database -&gt; Response\n</code></pre>"},{"location":"examples/#example-using-the-library-in-nodejs","title":"Example: Using the library in Node.js","text":"<pre><code>import { add } from \"@your/lib\";\nconsole.log(add(1, 4));\n</code></pre>"},{"location":"examples/#example-using-the-library-in-python","title":"Example: Using the library in Python","text":"<pre><code>from your_package import add\nprint(add(1, 4))\n</code></pre>"},{"location":"faq/","title":"FAQ","text":"<ul> <li>Where are the API docs?: See the API Reference section. If empty, generate with TypeDoc or pdoc.</li> <li>How do I run the docs site?: <code>mkdocs serve</code> from the repository root.</li> <li>How do I deploy docs?: <code>mkdocs build</code> and publish the <code>site/</code> folder to your hosting provider or GitHub Pages.</li> </ul>"},{"location":"getting-started/","title":"Getting Started","text":"<p>This guide helps you get up and running quickly.</p>"},{"location":"getting-started/#prerequisites","title":"Prerequisites","text":"<ul> <li>Git</li> <li>A supported runtime (Node.js or Python depending on your stack)</li> <li>Optional: Docker</li> </ul>"},{"location":"getting-started/#installation","title":"Installation","text":"<pre><code># Clone the repository\ngit clone &lt;YOUR_REPO_URL&gt;\ncd &lt;YOUR_REPO_DIR&gt;\n\n# (Optional) Create and activate a virtual environment for Python\n# python -m venv .venv &amp;&amp; source .venv/bin/activate\n\n# (Optional) Install docs tooling (MkDocs Material)\npip install mkdocs-material\n</code></pre>"},{"location":"getting-started/#running-the-documentation-locally","title":"Running the documentation locally","text":"<pre><code># From repo root\nmkdocs serve\n# Then open the URL shown in the terminal, typically http://127.0.0.1:8000/\n</code></pre>"},{"location":"getting-started/#project-layout","title":"Project layout","text":"<pre><code>.\n\u251c\u2500\u2500 docs/                # Documentation source\n\u2502   \u251c\u2500\u2500 api/             # API reference docs\n\u2502   \u251c\u2500\u2500 components.md    # UI/Service components\n\u2502   \u251c\u2500\u2500 examples.md      # End-to-end examples\n\u2502   \u251c\u2500\u2500 getting-started.md\n\u2502   \u251c\u2500\u2500 index.md\n\u2502   \u251c\u2500\u2500 usage.md\n\u2502   \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 mkdocs.yml           # Documentation site configuration\n</code></pre>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#configuration","title":"Configuration","text":"<p>Describe how to configure the project, environment variables, and any required credentials.</p> <p>Example (environment variables):</p> <pre><code>export APP_ENV=production\nexport APP_LOG_LEVEL=info\n</code></pre>"},{"location":"usage/#running","title":"Running","text":"<pre><code># Start the application\n# (Replace with your actual command)\nmake start\n# or\nnpm run start\n# or\npython -m your_app\n</code></pre>"},{"location":"usage/#common-tasks","title":"Common tasks","text":"<ul> <li>Build: <code>make build</code> or <code>npm run build</code></li> <li>Test: <code>pytest</code> or <code>npm test</code></li> <li>Lint: <code>flake8</code> or <code>npm run lint</code></li> </ul>"},{"location":"usage/#error-handling","title":"Error handling","text":"<p>Describe common errors and how to resolve them. Provide logs, exit codes, and troubleshooting tips.</p>"},{"location":"api/","title":"API Reference Overview","text":"<p>This section documents all public APIs, functions, and components. If your repository already contains source code, you can auto-generate language-specific API docs and embed them here.</p> <ul> <li>JavaScript/TypeScript: api/javascript.md</li> <li>Python: api/python.md</li> </ul> <p>If your codebase does not yet expose public APIs, use the language templates below to define clear public interfaces.</p>"},{"location":"api/javascript/","title":"JavaScript / TypeScript API","text":"<p>Below is a template for documenting exported functions, classes, and types.</p>"},{"location":"api/javascript/#example-module-srcmathaddts","title":"Example module: <code>src/math/add.ts</code>","text":"<pre><code>/**\n * Adds two numbers and returns the sum.\n * @example\n * add(2, 3) // 5\n */\nexport function add(a: number, b: number): number {\n  return a + b;\n}\n</code></pre>"},{"location":"api/javascript/#documentation-entry","title":"Documentation entry","text":"<ul> <li>Function: <code>add(a: number, b: number): number</code></li> <li>Description: Adds two numbers and returns the sum.</li> <li>Parameters:</li> <li><code>a</code>: number \u2014 First addend</li> <li><code>b</code>: number \u2014 Second addend</li> <li>Returns: number \u2014 Sum of <code>a</code> and <code>b</code></li> <li>Examples:   <code>ts   import { add } from \"./math/add\";   console.log(add(2, 3)); // 5</code></li> </ul>"},{"location":"api/javascript/#auto-generation-with-typedoc","title":"Auto-generation with TypeDoc","text":"<p>To auto-generate documentation for all exported symbols:</p> <pre><code>npm i -D typedoc typedoc-plugin-markdown\nnpx typedoc --plugin typedoc-plugin-markdown --out docs/api/ts --excludePrivate --excludeInternal src\n</code></pre> <p>Then add the generated Markdown files under <code>docs/api/ts</code> and link them via <code>mkdocs.yml</code>.</p>"},{"location":"api/python/","title":"Python API","text":"<p>Below is a template for documenting public functions and classes.</p>"},{"location":"api/python/#example-module-your_packagemathpy","title":"Example module: <code>your_package/math.py</code>","text":"<pre><code>def add(a: float, b: float) -&gt; float:\n    \"\"\"Add two numbers.\n\n    Args:\n        a: First addend.\n        b: Second addend.\n\n    Returns:\n        Sum of a and b.\n\n    Examples:\n        &gt;&gt;&gt; add(2, 3)\n        5\n    \"\"\"\n    return a + b\n</code></pre>"},{"location":"api/python/#documentation-entry","title":"Documentation entry","text":"<ul> <li>Function: <code>add(a: float, b: float) -&gt; float</code></li> <li>Description: Add two numbers and return the sum.</li> <li>Parameters: <code>a</code>, <code>b</code></li> <li>Returns: <code>float</code></li> <li>Examples:   <code>python   from your_package.math import add   print(add(2, 3))  # 5</code></li> </ul>"},{"location":"api/python/#auto-generation-with-pdoc-or-sphinx","title":"Auto-generation with pdoc (or Sphinx)","text":"<pre><code>pip install pdoc\npdoc -o docs/api/py your_package\n</code></pre> <p>Alternatively, configure Sphinx with <code>sphinx.ext.autodoc</code> to generate richer documentation.</p>"}]}